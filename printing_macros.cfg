[gcode_macro _print_variables]
variable_nevemore: True       # Has nevermore fan
variable_bedfans: True        # Has bedfans fan
variable_bed_mesh: True       # Has auto bedlevelin
variable_z_tilt: True         # Has z_tilt 
variable_chamber_temp: True   # Has chamber temp
variable_adaptive_purge: True # Using Adaprive purge
gcode:

[gcode_macro PRINT_START]
# Originaly copied from jontek2 (https://github.com/jontek2/A-better-print_start-macro)
gcode:
    LOG_DEBUG MSG="Starting PRINT_START macro"
    {% set nevemore = printer["gcode_macro _print_variables"].nevemore|default(False) %}
    {% set bedfans = printer["gcode_macro _print_variables"].bedfans|default(False) %}
    {% set z_tilt = printer["gcode_macro _print_variables"].z_tilt|default(False) %}
    {% set chamber_temp = printer["gcode_macro _print_variables"].chamber_temp|default(False) %}
    {% set adaptive_purge = printer["gcode_macro _print_variables"].adaptive_purge|default(False) %}
    LOG_VERBOSE MSG="nevemore = {nevemore}, bedfans = {bedfans}, z_tilt = {z_tilt}, chamber_temp = {chamber_temp}, adaptive_purge = {adaptive_purge}"
    
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    LOG_DEBUG MSG="Printer temps: extruderTemp: {target_extruder}, bedTemp: {target_bed}, chamberTemp: {target_chamber}"
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    LOG_DEBUG MSG="x_wait = {x_wait},y_wait = {y_wait}"

    # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
    LOG_DEBUG MSG="Homing"
    STATUS_HOMING         # Sets SB-leds to homing-mode
    LOG_VERBOSE MSG="Full home XYZ"
    G28                   # Full home (XYZ)
    LOG_VERBOSE MSG="Absolut position"
    G90                   # Absolut position

    LOG_DEBUG MSG="Clears old saved bed mesh"
    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

    LOG_INFORMATION MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                     # Sets SB-leds to heating-mode

    {% if nevemore %}
      LOG_VERBOSE MSG="Turns on the nevermore"
      SET_FAN_SPEED FAN=nevermore SPEED=1                # Turns on the nevermore
    {% endif %}

    LOG_VERBOSE MSG="Goes to center of the bed"
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed

    LOG_VERBOSE MSG="Sets the target temp for the bed"
    M190 S{target_bed}                                  # Sets the target temp for the bed

    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
    {% if params.BED|int > 90 %}
      LOG_DEBUG MSG="Checks if the bed temp is higher than 90c - if so then trigger a heatsoak."
      M106 S255                                           # Turns on the PT-fan

      {% if bedfans %}
        LOG_VERBOSE MSG="Starting bedfans"
        SET_FAN_SPEED FAN=bedfans SPEED=1                         # Turns on the bedfans
      {% endif %}

      {% if chamber_temp %}
      LOG_VERBOSE MSG="Sets the target temp for the bed"
      LOG_INFORMATION MSG="Heatsoak: {target_chamber}c"   # Displays info
      LOG_VERBOSE MSG="Waits for chamber to reach desired temp"
      TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
      {% else %}
        LOG_INFORMATION MSG="Soak for 30min"                 # Displays info
        G4 P1800000                                          # Waits 30 min for the bedtemp to stabilize
      {% endif %}
    # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
    {% else %}
      LOG_DEBUG MSG="If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak"
      LOG_DEBUG MSG="5 min Heatsoaking"
      LOG_INFORMATION MSG="Soak for 5min"                 # Displays info
      G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
    {% endif %}
    
    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    LOG_INFORMATION MSG="Hotend: 150c"            # Displays info
    M109 S150                                     # Heats the nozzle to 150c

    {% if z_tilt %}
      LOG_INFORMATION MSG="Z-tilt adjust"       # Displays info
      STATUS_LEVELING                          # Sets SB-leds to leveling-mode
      Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
      LOG_VERBOSE MSG="Homes Z again after z_tilt_adjust"
      G28 Z                                    # Homes Z again after z_tilt_adjust
    {% endif %}

    {% if bed_mesh %}
      LOG_INFORMATION MSG="Bed mesh"      # Displays info
      STATUS_MESHING                      # Sets SB-leds to bed mesh-mode
      BED_MESH_CALIBRATE                  # Starts bed mesh
    {% endif %}

    # Heats up the nozzle up to target via data from slicer
    LOG_INFORMATION MSG="Hotend: {target_extruder}c"              # Displays info
    STATUS_HEATING                                                # Sets SB-leds to heating-mode
    LOG_VERBOSE MSG="Goes to center of the bed"
    G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
    LOG_VERBOSE MSG="Turns off partcooling fan"
    M107                                                          # Turns off partcooling fan
    LOG_VERBOSE MSG="Heats the nozzle to printing temp"
    M109 S{target_extruder}                                       # Heats the nozzle to printing temp

    # Gets ready to print by doing a purge line and updating the SB-leds
    LOG_INFORMATION MSG="Printer goes brr"            # Displays info
    STATUS_PRINTING                                  # Sets SB-leds to printing-mode
    LOG_VERBOSE MSG="Moves to starting point"
    LOG_VERBOSE MSG="Raises Z to 0.4"
    G0 Z0.4                                          # Raises Z to 0.4
    {% if adaptive_purge %}
      LOG_VERBOSE MSG="Adaptive Purge"
      ADAPTIVE_PURGE                                   # Adaptive Purge
    {% else %}
      LOG_VERBOSE MSG="Prime Line"
      PRIME_LINE
    {% endif %}

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    LOG_DEBUG MSG="PRINT_END"
    LOG_VERBOSE MSG="wait for buffer to clear"
    M400                           ; wait for buffer to clear
    LOG_VERBOSE MSG="zero the extruder"
    G92 E0                         ; zero the extruder
    LOG_VERBOSE MSG="retract filament"
    G1 E-10.0 F3600                ; retract filament
    LOG_VERBOSE MSG="G91 relative positioning"
    G91                            ; relative positioning
    LOG_VERBOSE MSG="move nozzle to remove stringing"
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    LOG_VERBOSE MSG="TURN_OFF_HEATERS"
    TURN_OFF_HEATERS
    LOG_VERBOSE MSG="turn off fan"
    M107                           ; turn off fan
    LOG_VERBOSE MSG="move nozzle up 2mm"
    G1 Z2 F3000                    ; move nozzle up 2mm
    LOG_VERBOSE MSG="absolute positioning"
    G90                            ; absolute positioning
    LOG_VERBOSE MSG="park nozzle at rear"
    G0  X125 Y250 F3600            ; park nozzle at rear
    LOG_VERBOSE MSG="BED_MESH_CLEAR"
    BED_MESH_CLEAR
    LOG_VERBOSE MSG="Turn off stepper motors"
    M84                            ; Turn off stepper motors

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
#path: ~/gcode_files

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    LOG_DEBUG MSG="Pause the actual running print"
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    LOG_DEBUG MSG="park position x={X}, y={y}, z={z}, e={e}"
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    LOG_DEBUG MSG="z_safe={z_safe}"
    ##### end of definitions #####
    LOG_VERBOSE MSG="PAUSE_BASE"
    PAUSE_BASE
    LOG_VERBOSE MSG="G91 Incremental positioning"
    G91                         # Incremental positioning 
    {% if printer.extruder.can_extrude|lower == 'true' %}
      LOG_VERBOSE MSG="retraction {e}"
      G1 E-{e} F2100
    {% else %}
      LOG_WARNING MSG="Extruder not hot enough"
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      LOG_VERBOSE MSG="G1 Z{z_safe}"
      G1 Z{z_safe}
      LOG_VERBOSE MSG="G90 absolute positioning"
      G90
      LOG_VERBOSE MSG="G1 X{x} Y{y} F6000"
      G1 X{x} Y{y} F6000
    {% else %}
      LOG_WARNING MSG="Printer not homed"
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    LOG_DEBUG MSG="RESUME"
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
      LOG_DEBUG MSG="No parameters provided"
    {% endif %}
    ##### end of definitions #####
    LOG_DEBUG MSG="Resume e:{e}, get_params:{get_params}"

    LOG_VERBOSE MSG="G91 relative positioning"
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      LOG_DEBUG MSG="Retractiong fillamet"
      G1 E{e} F2100
    {% else %}
      LOG_WARNING MSG="Extruder not hot enough"
    {% endif %} 
    LOG_VERBOSE MSG="RESUME_BASE {get_params}"  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    LOG_DEBUG MSG="CANCEL_PRINT"
    LOG_VERBOSE MSG="wait for buffer to clear"
    M400                           ; wait for buffer to clear
    LOG_VERBOSE MSG="zero the extruder"
    G92 E0                         ; zero the extruder
    LOG_VERBOSE MSG="retract filament"
    G1 E-10.0 F3600                ; retract filament
    LOG_VERBOSE MSG="G91 relative positioning"
    G91                            ; relative positioning
    LOG_VERBOSE MSG="move nozzle to remove stringing"
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    LOG_VERBOSE MSG="TURN_OFF_HEATERS"
    TURN_OFF_HEATERS
    LOG_VERBOSE MSG="CANCEL_PRINT_BASE"
    CANCEL_PRINT_BASE
    LOG_VERBOSE MSG="turn off fan"
    M107                           ; turn off fan
    {% if printer["gcode_macro _print_variables"].bedfans|default(False) %}
      LOG_VERBOSE MSG="Turning off  bedfans"
      SET_FAN_SPEED FAN=bedfans SPEED=0                         # Turns off the bedfans
    {% endif %}
    LOG_VERBOSE MSG="move nozzle up 2mm"
    G1 Z2 F3000                    ; move nozzle up 2mm
    LOG_VERBOSE MSG="absolute positioning"
    G90                            ; absolute positioning
    LOG_VERBOSE MSG="park nozzle at rear"
    G0  X125 Y250 F3600            ; park nozzle at rear

[gcode_macro PRIME_LINE]
gcode:
    LOG_DEBUG MSG="PRIME_LINE"
    # settings
    {% set prime = {
      'X'      : 5,       # Prime line starting X coordinate / ##change this value##
      'Y'      : 0,       # Prime line starting Y coordinate / ##change this value##
      'length' : 120,     # Prime line length                / ##change this value##
      'purge'  : 8        # Prime line intial purge in mm    / ##change this value##
    } %}
    LOG_VERBOSE MSG="Prime line starting X coordinate: {X}"
    LOG_VERBOSE MSG="Prime line starting Y coordinate: {Y}"
    LOG_VERBOSE MSG="Prime line length: {lenght}"
    LOG_VERBOSE MSG="Prime line intial purge in mm: {purge}"

    {% set extruderTemp = params.EXTRUDER_TEMP|float %}
    {% set primeHeight = printer.configfile.config['extruder'].nozzle_diameter|float %}
    LOG_DEBUG MSG="extruderTemp:{extruderTemp}, primeHeight:{primeHeight}"

    LOG_VERBOSE MSG="G90 Absolute positioning"
    G90                                                     # Absolute positioning
    LOG_VERBOSE MSG="Move to print line starting coordinates"
    G0 X{prime.X} Y{prime.Y} Z{primeHeight*0.75} F6000      # Move to print line starting coordinates               
    LOG_VERBOSE MSG="Set nozzle to printing temperature and wait"
    M109 S{extruderTemp}                                    # Set nozzle to printing temperature and wait
    LOG_VERBOSE MSG="Reset extruder"
    G92 E0                                                  # Reset extruder
    LOG_VERBOSE MSG="Relative extruder positioning"
    M83                                                     # Relative extruder positioning
    LOG_VERBOSE MSG="Making a blob"
    G1 E{prime.purge} F300                                  # Making a blob
    LOG_VERBOSE MSG="Relative positioning"
    G91                                                     # Relative positioning
    LOG_VERBOSE MSG="First prime line"
    G1 X{prime.length} E{prime.length / 4} F1200            # First prime line
    LOG_VERBOSE MSG="Move 1mm up in Y"
    G0 Y1                                                   # Move 1mm up in Y
    LOG_VERBOSE MSG="Second prime line"
    G1 X{20 - prime.length} E{(prime.length / 4) - 5} F1200 # Second prime line
    LOG_VERBOSE MSG="Retracting"
    G1 Z1 E-0.75 F1200                                      # Retracting
    LOG_VERBOSE MSG="Reset extruder"
    G92 E0                                                  # Reset extruder
    LOG_VERBOSE MSG="G90 Absolute positioning"
    G90                                                     # Absolute positioning
    LOG_VERBOSE MSG="Relative extruder positioning"
    M83                                                     # Relative extruder positioning